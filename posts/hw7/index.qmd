---
title: ":LS 빅데이터 스쿨 HomeWork7"
author: "Subeen"
date: "2024-09-02"
categories: [bigdata]
jupyter: python3
---
# ADP 표본점수

2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를
따른다고 한다.

### 1. ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.

```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

x = np.arange(15, 45, 1)
pdf=norm.pdf(x, 30, 5)
plt.plot(x, pdf)
plt.title('Density Function of Normal Distribution (mean=30, std=5)')
plt.xlabel('Value')
plt.ylabel('Density')
plt.grid(True)
plt.legend()

```

### 2. ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.
```{python}
from scipy.stats import norm

pro = 1 - norm.cdf(45, 30, 5)
print(f"45점보다 높을 확률: {pro:.3f}")
```


### 3. 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.

```{python}
print(f"슬통이의 점수: {norm.ppf(0.9, 30, 5):.3f}")
```

### 4. 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균 내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.

```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

x = np.arange(15, 45, 1)
sample_std = 5 / np.sqrt(16)

pdf=norm.pdf(x, 30, 5)
sample_pdf=norm.pdf(x, 30, scale=sample_std)
plt.plot(x, pdf)
plt.plot(x, sample_pdf, color='red')
```


### 5. 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게나올 확률을 구하세요.

```{python}
sample_std = 5 / np.sqrt(16)
pro_up_38 = 1 - norm.cdf(38, 30, scale=sample_std)
print(f"수강생 평균이 38점보다 높을 확률: {pro_up_38:.5f}")
```

# Covid 19 발병률
Covid‑19의 발병률은 1%라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 1,085
명을 대상으로 슬통 회사의 “다잡아” 키트를 사용하여 양성 반응을 체크한 결과이다.

### 1. 다잡아 키트가 코로나 바이러스에 걸린 사람을 양성으로 잡아낼 확률을 계산하세요. 
```{python}
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
img = mpimg.imread('check.png')

# 이미지 표시
plt.imshow(img)

true_positive= 370
actual_positive = 370 + 15

recall = true_positive / actual_positive
print(f"실제 양성중 예측 양성인 사람의 확률: {recall:.3f}")
```


### 2. 슬통 회사에서 다잡아 키트를 사용해 양성으로 나온 사람이 실제로는 코로나 바이러스에 걸려 있을 확률을 97%라며, 키트의 우수성을 주장했다. 이 주장이 옳지 않은 이유를 서술하세요.
코로나 바이러스의 유병률(전체 인구 중 실제로 바이러스에 걸린 사람의 비율)이 낮은 경우, 많은 수의 거짓 양성(False Positive)이 발생할 수 있으며, 이로 인해 실제로 양성인 사람의 비율(양성 예측도)이 감소할 수 있다.

### 3. Covid‑19 발병률을 사용하여, 키트의 결과값이 양성으로 나온 사람이 실제로 코로나 바이러스에 걸려있을 확률을 구하세요.
모르겠어요.
```{python}
sol = (0.01 * (370 / 385)) / (0.01 * (370 / 385) + 0.99 * (10 / 700))
round(sol, 3)
```

# 카이제곱분포와 표본분산

### 1. 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.
```{python}
from scipy.stats import chi2
import matplotlib.pyplot as plt
import numpy as np
k = np.linspace(0, 20, 100)
y = chi2.pdf(k, df=7)
plt.plot(k, y, color='black')
```

### 2. 다음의 확률을 구해보세요. 𝑃 (3 ≤ 𝑋 ≤ 5)

```{python}
df = 4

pro = chi2.cdf(5, df) - chi2.cdf(3, df)
print(f"자유도가 4인 카이제곱분포가 (3 ≤ 𝑋 ≤ 5)일 확률: {pro:.3f}")
```

### 3. 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.

```{python}
from scipy.stats import chi2
import seaborn as sns
df = 4
sample = chi2.rvs(df, size=1000, random_state=2024)
sns.histplot(data=sample)

```

### 4.자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.

```{python}

df = 4

value = chi2.ppf(0.95, df)

# 결과 출력
print(f"자유도가 4인 카이제곱분포에서 상위 5%에 해당하는 값: {value:.3f}")
```

### 5.3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?

```{python}
import numpy as np
df = 4

sample = chi2.rvs(df, size=1000, random_state=2024)
percentile_value = np.percentile(sample, 95)
print(f"3번에서 뽑은 표본값들 중 상위 5%: {percentile_value:.3f}")
```

### 6. 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 𝑠21 이라 생각해보죠. 다음을 수행해보세요!
```{python}
from scipy.stats import norm
X = norm.rvs(3, 2, 20)
print(f"평균이3, 표준편차가2, 크기가 20인 확률변수: {X}")
s2 = np.var(X, ddof=1)
print(f"표본분산:{s2:}")
```

```{python}
print("같은 방법으로 500개의 𝑠2 들, 𝑠21, 𝑠22, ..., 𝑠2 500 발생시킵니다.")
size = 20 
num_samples = 500  

S2_values = []

# 각 표본에 대해 분산 계산
for _ in range(num_samples):
    Y = norm.rvs(3, 2, size=size)  
    S2 = np.var(Y, ddof=1)  
    S2_values.append(S2)

# 첫 번째 표본의 표본 분산 예시 출력
print(f"500개의 표본분산 s2: {S2_values[0]:.3f}")

```

```{python}
import matplotlib.pyplot as plt

print("발생한 500개의 𝑠2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램 을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)")
s2value_475 = np.array(S2_values) * 4.75
sns.histplot(s2value_475, bins=30, stat="density")

print("위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.")

from scipy.stats import chi2
x = np.linspace(min(s2value_475), max(s2value_475), 1000)
chi2_pdf=chi2.pdf(x,df=19)
plt.plot(x, chi2_pdf, color= 'red')

```
