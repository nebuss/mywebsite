[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello",
    "section": "",
    "text": "안녕하세요 데이터 분석하는 박수빈입니다"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "work1.html",
    "href": "work1.html",
    "title": "work1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량': [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "work1.html#문제3",
    "href": "work1.html#문제3",
    "title": "work1",
    "section": "문제3",
    "text": "문제3\n\ntotal, asian 변수 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을\n만들어 분포를 살펴보세요.\n\ndf_midnew['asian_pop'] = (df_midnew['asian'] / df_midnew['total']) * 100\n\ndf_midnew['asian_pop'].plot.hist()"
  },
  {
    "objectID": "work1.html#문제3-1",
    "href": "work1.html#문제3-1",
    "title": "work1",
    "section": "문제3",
    "text": "문제3\n\n아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만드시오.\n\nasian_average = df_midnew['asian_pop'].mean()\nasian_average\n\nnp.float64(0.4872461834357345)\n\n\n\n#평균을 초과하면 'large'\ndf_midnew['large'] = (df_midnew['asian_pop'].mean() &lt; df_midnew['asian_pop'])\ndf_midnew\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_pop\nlarge\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nFalse\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nFalse\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nFalse\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nFalse\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nFalse\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nTrue\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nFalse\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nFalse\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nTrue\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nTrue\n\n\n\n\n437 rows × 30 columns\n\n\n\n\n#평균 미만이면 'small'\ndf_midnew['small'] = (df_midnew['asian_pop'].mean() &gt; df_midnew['asian_pop'])\ndf_midnew\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_pop\nlarge\nsmall\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nFalse\nTrue\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nFalse\nTrue\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nFalse\nTrue\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nFalse\nTrue\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nFalse\nTrue\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nTrue\nFalse\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nFalse\nTrue\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nFalse\nTrue\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nTrue\nFalse\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nTrue\nFalse\n\n\n\n\n437 rows × 31 columns"
  },
  {
    "objectID": "work1.html#문제-5",
    "href": "work1.html#문제-5",
    "title": "work1",
    "section": "문제 5",
    "text": "문제 5\n\n# 'large'에 해당하는 빈도\n\nlarge_counts= df_midnew['large'].value_counts()\nprint(large_counts)\nlarge_counts.plot.bar()\n\nlarge\nFalse    318\nTrue     119\nName: count, dtype: int64\n\n\n\n\n\n\n\n\n\n\n# 'small'에 해당하는 빈도\n\nsmall_counts= df_midnew['small'].value_counts()\nprint(large_counts)\nsmall_counts.plot.bar()\n\nlarge\nFalse    318\nTrue     119\nName: count, dtype: int64\n\n\n\n\n\n\n\n\n\n```"
  },
  {
    "objectID": "work2.html#이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비평균이-더-높은지",
    "href": "work2.html#이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비평균이-더-높은지",
    "title": "work2",
    "section": "4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)평균이 더 높은지",
    "text": "4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)평균이 더 높은지"
  },
  {
    "objectID": "work2.html#알아보세요",
    "href": "work2.html#알아보세요",
    "title": "work2",
    "section": "알아보세요",
    "text": "알아보세요"
  },
  {
    "objectID": "work2.html",
    "href": "work2.html",
    "title": "work2",
    "section": "",
    "text": "0716 ### Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 한다. ### displ(배기량)이 4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)평균이 더 높은지 알아보세요\n\nimport pandas as pd\nimport numpy as np\n\nmpg = pd.read_csv('data/mpg.csv')\n\ndispl_4=mpg.query('displ  &lt;= 4')\ndispl_4\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n163 rows × 11 columns\n\n\n\n\ndispl_5=mpg.query('displ  &gt;= 5')\ndispl_5\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n18\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n\n\n19\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n\n\n20\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n\n\n21\nchevrolet\nc1500 suburban 2wd\n5.7\n1999\n8\nauto(l4)\nr\n13\n17\nr\nsuv\n\n\n22\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n\n\n23\nchevrolet\ncorvette\n5.7\n1999\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n\n\n24\nchevrolet\ncorvette\n5.7\n1999\n8\nauto(l4)\nr\n15\n23\np\n2seater\n\n\n25\nchevrolet\ncorvette\n6.2\n2008\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n\n\n26\nchevrolet\ncorvette\n6.2\n2008\n8\nauto(s6)\nr\n15\n25\np\n2seater\n\n\n27\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n\n\n28\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n\n\n29\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n\n\n30\nchevrolet\nk1500 tahoe 4wd\n5.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n\n\n31\nchevrolet\nk1500 tahoe 4wd\n6.5\n1999\n8\nauto(l4)\n4\n14\n17\nd\nsuv\n\n\n55\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n17\nr\npickup\n\n\n56\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n61\ndodge\ndurango 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n16\nr\nsuv\n\n\n62\ndodge\ndurango 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n\n\n63\ndodge\ndurango 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n\n\n70\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n71\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n16\nr\npickup\n\n\n72\ndodge\nram 1500 pickup 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n\n\n73\ndodge\nram 1500 pickup 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n75\nford\nexpedition 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\n76\nford\nexpedition 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n\n\n82\nford\nexplorer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n\n\n88\nford\nf150 pickup 4wd\n5.4\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n89\nford\nf150 pickup 4wd\n5.4\n2008\n8\nauto(l4)\n4\n13\n17\nr\npickup\n\n\n98\nford\nmustang\n5.4\n2008\n8\nmanual(m6)\nr\n14\n20\np\nsubcompact\n\n\n128\njeep\ngrand cherokee 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n\n\n129\njeep\ngrand cherokee 4wd\n6.1\n2008\n8\nauto(l5)\n4\n11\n14\np\nsuv\n\n\n134\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\n135\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n16\np\nsuv\n\n\n136\nlincoln\nnavigator 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n\n\n140\nmercury\nmountaineer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n\n\n153\nnissan\npathfinder 4wd\n5.6\n2008\n8\nauto(s5)\n4\n12\n18\np\nsuv\n\n\n158\npontiac\ngrand prix\n5.3\n2008\n8\nauto(s4)\nf\n16\n25\np\nmidsize\n\n\n199\ntoyota\nland cruiser wagon 4wd\n5.7\n2008\n8\nauto(s6)\n4\n13\n18\nr\nsuv\n\n\n\n\n\n\n\n\ndispl_4_mean=displ_4['hwy'].mean() # displ_4는 데이터 프레임 형식이니까, 내가 알고 싶은 배기량 열로 접근\ndispl_5_mean=displ_5['hwy'].mean()\n\ndispl_4_mean\n\nnp.float64(25.96319018404908)\n\n\n\ndispl_5_mean\n\nresult = displ_4_mean &gt; displ_5_mean\nprint(result)\n\nprint(\"결과: 배기량이 4인 자동차의 고속도로 연비 평균이 더 높다.\")\n\nTrue\n결과: 배기량이 4인 자동차의 고속도로 연비 평균이 더 높다.\n\n\n\nQ2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다.\n\n\n‘audi’와 ’toyota’ 중 어느 manufacturer 의 cty(도시연비) 평균이 더 높은지 알아보세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\n\n\nmpg_toyota = mpg.query('manufacturer == \"toyota\"')\nmpg_toyota\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n173\ntoyota\n4runner 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\nsuv\n\n\n174\ntoyota\n4runner 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\nsuv\n\n\n175\ntoyota\n4runner 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\nsuv\n\n\n176\ntoyota\n4runner 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\nsuv\n\n\n177\ntoyota\n4runner 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\nsuv\n\n\n178\ntoyota\n4runner 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n17\nr\nsuv\n\n\n179\ntoyota\ncamry\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nmidsize\n\n\n180\ntoyota\ncamry\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\nmidsize\n\n\n181\ntoyota\ncamry\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\nmidsize\n\n\n182\ntoyota\ncamry\n2.4\n2008\n4\nauto(l5)\nf\n21\n31\nr\nmidsize\n\n\n183\ntoyota\ncamry\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\n184\ntoyota\ncamry\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\nmidsize\n\n\n185\ntoyota\ncamry\n3.5\n2008\n6\nauto(s6)\nf\n19\n28\nr\nmidsize\n\n\n186\ntoyota\ncamry solara\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\ncompact\n\n\n187\ntoyota\ncamry solara\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n\n\n188\ntoyota\ncamry solara\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\ncompact\n\n\n189\ntoyota\ncamry solara\n2.4\n2008\n4\nauto(s5)\nf\n22\n31\nr\ncompact\n\n\n190\ntoyota\ncamry solara\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\ncompact\n\n\n191\ntoyota\ncamry solara\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\ncompact\n\n\n192\ntoyota\ncamry solara\n3.3\n2008\n6\nauto(s5)\nf\n18\n27\nr\ncompact\n\n\n193\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l3)\nf\n24\n30\nr\ncompact\n\n\n194\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l4)\nf\n24\n33\nr\ncompact\n\n\n195\ntoyota\ncorolla\n1.8\n1999\n4\nmanual(m5)\nf\n26\n35\nr\ncompact\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n\n\n197\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n\n\n198\ntoyota\nland cruiser wagon 4wd\n4.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n\n\n199\ntoyota\nland cruiser wagon 4wd\n5.7\n2008\n8\nauto(s6)\n4\n13\n18\nr\nsuv\n\n\n200\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\npickup\n\n\n201\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\npickup\n\n\n202\ntoyota\ntoyota tacoma 4wd\n2.7\n2008\n4\nmanual(m5)\n4\n17\n22\nr\npickup\n\n\n203\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\npickup\n\n\n204\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\npickup\n\n\n205\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nmanual(m6)\n4\n15\n18\nr\npickup\n\n\n206\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\npickup\n\n\n\n\n\n\n\n\nmpg_audi['hwy'].mean()\n\nnp.float64(26.444444444444443)\n\n\n\nmpg_toyota['hwy'].mean()\nprint(\"결과: 아우디 회사의 도시연비 평균이 더 높다.\")\n\n결과: 아우디 회사의 도시연비 평균이 더 높다.\n\n\n\n\nQ3. ‘chevoret’, ‘ford’, ‘honda’ 자동차의 고속도로 연비평균을 알아보려고 합니다.\n\n\n세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nhwy_mpg = mpg.query('manufacturer in [\"chevoret\", \"ford\", \"honda\"]')\nmean_hwy = hwy_mpg['hwy'].mean()\nmean_hwy\n\nnp.float64(22.852941176470587)\n\n\n\n\n\nQ1. ’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 한다.\n\n\naudi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\\\n              .sort_values('hwy', ascending=False)\\\n              .head(5)"
  },
  {
    "objectID": "work2.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-한다.-displ배기량이",
    "href": "work2.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-한다.-displ배기량이",
    "title": "work2",
    "section": "",
    "text": "4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)평균이 더 높은지 알아보세요"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "글 목록",
    "section": "",
<<<<<<< HEAD
    "text": ":LS 빅데이터 스쿨 HomeWork5\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 30, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\nSubeen\n\n\n\n\n\n\nNo matching items"
=======
    "text": ":LS 빅데이터 스쿨 HomeWork4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\nSubeen\n\n\n\n\n\n\n\n\n\n\n\n\n:LS 빅데이터 스쿨 HomeWork2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\nSubeen\n\n\n\n\n\n\nNo matching items"
>>>>>>> 6d550963f2af6b248674c94c5617f92c47200f17
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": ":LS 빅데이터 스쿨 HomeWork1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                    '가격' : [1800, 1500, 3000],\n                    '판매량': [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#문제3",
    "href": "posts/hw1/index.html#문제3",
    "title": ":LS 빅데이터 스쿨 HomeWork1",
    "section": "문제3",
    "text": "문제3\n\ntotal, asian 변수 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을\n만들어 분포를 살펴보세요.\n\ndf_midnew['asian_pop'] = (df_midnew['asian'] / df_midnew['total']) * 100\n\ndf_midnew['asian_pop'].plot.hist()"
  },
  {
    "objectID": "posts/hw1/index.html#문제3-1",
    "href": "posts/hw1/index.html#문제3-1",
    "title": ":LS 빅데이터 스쿨 HomeWork1",
    "section": "문제3",
    "text": "문제3\n\n아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만드시오.\n\nasian_average = df_midnew['asian_pop'].mean()\nasian_average\n\nnp.float64(0.4872461834357345)\n\n\n\n#평균을 초과하면 'large'\ndf_midnew['large'] = (df_midnew['asian_pop'].mean() &lt; df_midnew['asian_pop'])\ndf_midnew\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_pop\nlarge\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nFalse\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nFalse\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nFalse\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nFalse\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nFalse\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nTrue\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nFalse\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nFalse\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nTrue\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nTrue\n\n\n\n\n437 rows × 30 columns\n\n\n\n\n#평균 미만이면 'small'\ndf_midnew['small'] = (df_midnew['asian_pop'].mean() &gt; df_midnew['asian_pop'])\ndf_midnew\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_pop\nlarge\nsmall\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nFalse\nTrue\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nFalse\nTrue\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nFalse\nTrue\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nFalse\nTrue\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nFalse\nTrue\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nTrue\nFalse\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nFalse\nTrue\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nFalse\nTrue\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nTrue\nFalse\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nTrue\nFalse\n\n\n\n\n437 rows × 31 columns"
  },
  {
    "objectID": "posts/hw1/index.html#문제-5",
    "href": "posts/hw1/index.html#문제-5",
    "title": ":LS 빅데이터 스쿨 HomeWork1",
    "section": "문제 5",
    "text": "문제 5\n\n# 'large'에 해당하는 빈도\n\nlarge_counts= df_midnew['large'].value_counts()\nprint(large_counts)\nlarge_counts.plot.bar()\n\nlarge\nFalse    318\nTrue     119\nName: count, dtype: int64\n\n\n\n\n\n\n\n\n\n\n# 'small'에 해당하는 빈도\n\nsmall_counts= df_midnew['small'].value_counts()\nprint(large_counts)\nsmall_counts.plot.bar()\n\nlarge\nFalse    318\nTrue     119\nName: count, dtype: int64\n\n\n\n\n\n\n\n\n\n```"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": ":LS 빅데이터 스쿨 HomeWork2",
    "section": "",
    "text": "0716 ### Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 한다. ### displ(배기량)이 4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)평균이 더 높은지 알아보세요\n\nimport pandas as pd\nimport numpy as np\n\nmpg = pd.read_csv('data/mpg.csv')\nmpg\ndispl_4=mpg.query('displ  &lt;= 4')\ndispl_4\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n163 rows × 11 columns\n\n\n\n\ndispl_5=mpg.query('displ  &gt;= 5')\ndispl_5\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n18\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n\n\n19\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n\n\n20\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n\n\n21\nchevrolet\nc1500 suburban 2wd\n5.7\n1999\n8\nauto(l4)\nr\n13\n17\nr\nsuv\n\n\n22\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n\n\n23\nchevrolet\ncorvette\n5.7\n1999\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n\n\n24\nchevrolet\ncorvette\n5.7\n1999\n8\nauto(l4)\nr\n15\n23\np\n2seater\n\n\n25\nchevrolet\ncorvette\n6.2\n2008\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n\n\n26\nchevrolet\ncorvette\n6.2\n2008\n8\nauto(s6)\nr\n15\n25\np\n2seater\n\n\n27\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n\n\n28\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n\n\n29\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n\n\n30\nchevrolet\nk1500 tahoe 4wd\n5.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n\n\n31\nchevrolet\nk1500 tahoe 4wd\n6.5\n1999\n8\nauto(l4)\n4\n14\n17\nd\nsuv\n\n\n55\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n17\nr\npickup\n\n\n56\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n61\ndodge\ndurango 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n16\nr\nsuv\n\n\n62\ndodge\ndurango 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n\n\n63\ndodge\ndurango 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n\n\n70\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n71\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n16\nr\npickup\n\n\n72\ndodge\nram 1500 pickup 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n\n\n73\ndodge\nram 1500 pickup 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n75\nford\nexpedition 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\n76\nford\nexpedition 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n\n\n82\nford\nexplorer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n\n\n88\nford\nf150 pickup 4wd\n5.4\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n\n\n89\nford\nf150 pickup 4wd\n5.4\n2008\n8\nauto(l4)\n4\n13\n17\nr\npickup\n\n\n98\nford\nmustang\n5.4\n2008\n8\nmanual(m6)\nr\n14\n20\np\nsubcompact\n\n\n128\njeep\ngrand cherokee 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n\n\n129\njeep\ngrand cherokee 4wd\n6.1\n2008\n8\nauto(l5)\n4\n11\n14\np\nsuv\n\n\n134\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\n135\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n16\np\nsuv\n\n\n136\nlincoln\nnavigator 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n\n\n140\nmercury\nmountaineer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n\n\n153\nnissan\npathfinder 4wd\n5.6\n2008\n8\nauto(s5)\n4\n12\n18\np\nsuv\n\n\n158\npontiac\ngrand prix\n5.3\n2008\n8\nauto(s4)\nf\n16\n25\np\nmidsize\n\n\n199\ntoyota\nland cruiser wagon 4wd\n5.7\n2008\n8\nauto(s6)\n4\n13\n18\nr\nsuv\n\n\n\n\n\n\n\n\ndispl_4_mean=displ_4['hwy'].mean() # displ_4는 데이터 프레임 형식이니까, 내가 알고 싶은 배기량 열로 접근\ndispl_5_mean=displ_5['hwy'].mean()\n\ndispl_4_mean\n\nnp.float64(25.96319018404908)\n\n\n\ndispl_5_mean\n\nresult = displ_4_mean &gt; displ_5_mean\nprint(result)\n\nprint(\"결과: 배기량이 4인 자동차의 고속도로 연비 평균이 더 높다.\")\n\nTrue\n결과: 배기량이 4인 자동차의 고속도로 연비 평균이 더 높다.\n\n\n\nQ2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다.\n\n\n‘audi’와 ’toyota’ 중 어느 manufacturer 의 cty(도시연비) 평균이 더 높은지 알아보세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\n\n\nmpg_toyota = mpg.query('manufacturer == \"toyota\"')\nmpg_toyota\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n173\ntoyota\n4runner 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\nsuv\n\n\n174\ntoyota\n4runner 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\nsuv\n\n\n175\ntoyota\n4runner 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\nsuv\n\n\n176\ntoyota\n4runner 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\nsuv\n\n\n177\ntoyota\n4runner 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\nsuv\n\n\n178\ntoyota\n4runner 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n17\nr\nsuv\n\n\n179\ntoyota\ncamry\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nmidsize\n\n\n180\ntoyota\ncamry\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\nmidsize\n\n\n181\ntoyota\ncamry\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\nmidsize\n\n\n182\ntoyota\ncamry\n2.4\n2008\n4\nauto(l5)\nf\n21\n31\nr\nmidsize\n\n\n183\ntoyota\ncamry\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\n184\ntoyota\ncamry\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\nmidsize\n\n\n185\ntoyota\ncamry\n3.5\n2008\n6\nauto(s6)\nf\n19\n28\nr\nmidsize\n\n\n186\ntoyota\ncamry solara\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\ncompact\n\n\n187\ntoyota\ncamry solara\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n\n\n188\ntoyota\ncamry solara\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\ncompact\n\n\n189\ntoyota\ncamry solara\n2.4\n2008\n4\nauto(s5)\nf\n22\n31\nr\ncompact\n\n\n190\ntoyota\ncamry solara\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\ncompact\n\n\n191\ntoyota\ncamry solara\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\ncompact\n\n\n192\ntoyota\ncamry solara\n3.3\n2008\n6\nauto(s5)\nf\n18\n27\nr\ncompact\n\n\n193\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l3)\nf\n24\n30\nr\ncompact\n\n\n194\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l4)\nf\n24\n33\nr\ncompact\n\n\n195\ntoyota\ncorolla\n1.8\n1999\n4\nmanual(m5)\nf\n26\n35\nr\ncompact\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n\n\n197\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n\n\n198\ntoyota\nland cruiser wagon 4wd\n4.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n\n\n199\ntoyota\nland cruiser wagon 4wd\n5.7\n2008\n8\nauto(s6)\n4\n13\n18\nr\nsuv\n\n\n200\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\npickup\n\n\n201\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\npickup\n\n\n202\ntoyota\ntoyota tacoma 4wd\n2.7\n2008\n4\nmanual(m5)\n4\n17\n22\nr\npickup\n\n\n203\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\npickup\n\n\n204\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\npickup\n\n\n205\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nmanual(m6)\n4\n15\n18\nr\npickup\n\n\n206\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\npickup\n\n\n\n\n\n\n\n\nmpg_audi['hwy'].mean()\n\nnp.float64(26.444444444444443)\n\n\n\nmpg_toyota['hwy'].mean()\nprint(\"결과: 아우디 회사의 도시연비 평균이 더 높다.\")\n\n결과: 아우디 회사의 도시연비 평균이 더 높다.\n\n\n\n\nQ3. ‘chevoret’, ‘ford’, ‘honda’ 자동차의 고속도로 연비평균을 알아보려고 합니다.\n\n\n세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nhwy_mpg = mpg.query('manufacturer in [\"chevoret\", \"ford\", \"honda\"]')\nmean_hwy = hwy_mpg['hwy'].mean()\nmean_hwy\n\nnp.float64(22.852941176470587)\n\n\n\n\n\nQ1. ’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 한다.\n\n\naudi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\\\n              .sort_values('hwy', ascending=False)\\\n              .head(5)"
  },
  {
    "objectID": "posts/hw3/index.html",
    "href": "posts/hw3/index.html",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\n\n\n\ndef normal_pdf(x, mu, sigma):\n    a = 1 / (np.sqrt(2 * np.pi * (sigma**2)))\n    b = np.exp(-0.5 * ((x - mu) / sigma) ** 2)\n    return a * b\n\nx = np.linspace(-10, 10, 100)\ny = normal_pdf(x, 3, 2)\n\nplt.plot(x, y)\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#q1.-mpg-데이터의-cty도시-연비와-hwy고속도로-연비간에-어떤-관계가-있는지-알아보려고-한다.",
    "href": "posts/hw3/index.html#q1.-mpg-데이터의-cty도시-연비와-hwy고속도로-연비간에-어떤-관계가-있는지-알아보려고-한다.",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q1. mpg 데이터의 cty(도시 연비)와 hwy(고속도로 연비)간에 어떤 관계가 있는지 알아보려고 한다.",
    "text": "Q1. mpg 데이터의 cty(도시 연비)와 hwy(고속도로 연비)간에 어떤 관계가 있는지 알아보려고 한다."
  },
  {
    "objectID": "posts/hw3/index.html#x축은-cty-y축은-hwy로-된-산점도를-만들어보라.",
    "href": "posts/hw3/index.html#x축은-cty-y축은-hwy로-된-산점도를-만들어보라.",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "x축은 cty, y축은 hwy로 된 산점도를 만들어보라.",
    "text": "x축은 cty, y축은 hwy로 된 산점도를 만들어보라.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('data/mpg.csv')\nsns.scatterplot(data = mpg, \n                x = 'cty', y = 'hwy')\n\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#q1.-mpg-데이터의-cty도시-연비와-hwy고속도로-연비간에-어떤-관계가-있는지-알아보려고-한다.-x축은-cty-y축은-hwy로-된-산점도를-만들어보라.",
    "href": "posts/hw3/index.html#q1.-mpg-데이터의-cty도시-연비와-hwy고속도로-연비간에-어떤-관계가-있는지-알아보려고-한다.-x축은-cty-y축은-hwy로-된-산점도를-만들어보라.",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q1. mpg 데이터의 cty(도시 연비)와 hwy(고속도로 연비)간에 어떤 관계가 있는지 알아보려고 한다.   x축은 cty, y축은 hwy로 된 산점도를 만들어보라.",
    "text": "Q1. mpg 데이터의 cty(도시 연비)와 hwy(고속도로 연비)간에 어떤 관계가 있는지 알아보려고 한다.   x축은 cty, y축은 hwy로 된 산점도를 만들어보라.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('data/mpg.csv')\nsns.scatterplot(data = mpg, \n                x = 'cty', y = 'hwy')\n\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#q2.-미국의-지역별-인구통계-정보를-담은-midwest.csv-를-이용해-전체-인구와-아시아인-인구-간에",
    "href": "posts/hw3/index.html#q2.-미국의-지역별-인구통계-정보를-담은-midwest.csv-를-이용해-전체-인구와-아시아인-인구-간에",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q2. 미국의 지역별 인구통계 정보를 담은 midwest.csv 를 이용해 전체 인구와 아시아인 인구 간에\n",
    "text": "Q2. 미국의 지역별 인구통계 정보를 담은 midwest.csv 를 이용해 전체 인구와 아시아인 인구 간에\n\n어떤 관계가 있는지 알아보려고한다. x축은 poptotal(인구 전체), y 축은 popasian(아시아인 인구)\n로 된 산점도를 만들어라. 전체 인구는 50만 명 이하, 아시아인 인구는 1만명 이하인 지역만 산점도에 표시\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nmidwest= pd.read_csv('data/midwest.csv')\n\nsns.scatterplot(data = midwest, x = 'poptotal', y = 'popasian') \\\n   .set(xlim= (0, 5000000), ylim=(0,10000))\n\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#q1.-어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-한다.-suv-차종을-대상으로",
    "href": "posts/hw3/index.html#q1.-어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-한다.-suv-차종을-대상으로",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q1. 어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 한다. ‘suv’ 차종을 대상으로\n",
    "text": "Q1. 어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 한다. ‘suv’ 차종을 대상으로\n\ncty(도시 연비) 평균이 가장 높은 회사 다섯 곳 을 막대 그래프로 표현해라. 막대는 연비가 높은 순으로 정렬\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('data/mpg.csv')\n\ndf  =mpg.query(\"category == 'suv'\") \\\n        .groupby('manufacturer', as_index=False) \\\n        .agg( mean_cty = ('cty', 'mean' )) \\\n        .sort_values('mean_cty', ascending=False)\\\n        .head()\ndf\n\nsns.barplot(data = df, x = 'manufacturer', y='mean_cty')"
  },
  {
    "objectID": "posts/hw3/index.html#q2.-자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-한다.-sns.barplot을-이용해",
    "href": "posts/hw3/index.html#q2.-자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-한다.-sns.barplot을-이용해",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q2. 자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 한다. sns.barplot()을 이용해\n",
    "text": "Q2. 자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 한다. sns.barplot()을 이용해\n\n자동차 종류별 빈도를 표현한 막대 그래프를 만들어보라. 막대는 빈도가 높은 순으로 정렬하기."
  },
  {
    "objectID": "posts/hw3/index.html#q2.-자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-한다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어보라.-막대는-빈도가-높은-순으로-정렬하기.",
    "href": "posts/hw3/index.html#q2.-자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-한다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어보라.-막대는-빈도가-높은-순으로-정렬하기.",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q2. 자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 한다. sns.barplot()을 이용해  자동차 종류별 빈도를 표현한 막대 그래프를 만들어보라. 막대는 빈도가 높은 순으로 정렬하기.",
    "text": "Q2. 자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 한다. sns.barplot()을 이용해  자동차 종류별 빈도를 표현한 막대 그래프를 만들어보라. 막대는 빈도가 높은 순으로 정렬하기.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('data/mpg.csv')\n\ndf_mpg = mpg.groupby('category', as_index=False) \\\n            .agg(count = ('category', 'count')) \\\n            .sort_values('count', ascending=False)\ndf_mpg\n\n\n\n\n\n\n\n\ncategory\ncount\n\n\n\n\n6\nsuv\n62\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n5\nsubcompact\n35\n\n\n4\npickup\n33\n\n\n3\nminivan\n11\n\n\n0\n2seater\n5\n\n\n\n\n\n\n\n\nimport seaborn as sns\nsns.barplot(data= df_mpg, x = 'category' , y = 'count')"
  },
  {
    "objectID": "posts/hw3/index.html#q1.-어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-한다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳-을-막대-그래프로-표현해라.-막대는-연비가-높은-순으로-정렬",
    "href": "posts/hw3/index.html#q1.-어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-한다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳-을-막대-그래프로-표현해라.-막대는-연비가-높은-순으로-정렬",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q1. 어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 한다. ‘suv’ 차종을 대상으로  cty(도시 연비) 평균이 가장 높은 회사 다섯 곳 을 막대 그래프로 표현해라. 막대는 연비가 높은 순으로 정렬",
    "text": "Q1. 어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 한다. ‘suv’ 차종을 대상으로  cty(도시 연비) 평균이 가장 높은 회사 다섯 곳 을 막대 그래프로 표현해라. 막대는 연비가 높은 순으로 정렬\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('data/mpg.csv')\n\ndf  =mpg.query(\"category == 'suv'\") \\\n        .groupby('manufacturer', as_index=False) \\\n        .agg( mean_cty = ('cty', 'mean' )) \\\n        .sort_values('mean_cty', ascending=False)\\\n        .head()\ndf\n\nsns.barplot(data = df, x = 'manufacturer', y='mean_cty')"
  },
  {
    "objectID": "posts/hw3/index.html#q1.-어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-한다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳-을-막대-그래프로-표현해라.-막대는-연비가-높은-순으로-정렬하라",
    "href": "posts/hw3/index.html#q1.-어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-한다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳-을-막대-그래프로-표현해라.-막대는-연비가-높은-순으로-정렬하라",
    "title": ":LS 빅데이터 스쿨 HomeWork3",
    "section": "Q1. 어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 한다. ‘suv’ 차종을 대상으로  cty(도시 연비) 평균이 가장 높은 회사 다섯 곳 을 막대 그래프로 표현해라. 막대는 연비가 높은 순으로 정렬하라",
    "text": "Q1. 어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 한다. ‘suv’ 차종을 대상으로  cty(도시 연비) 평균이 가장 높은 회사 다섯 곳 을 막대 그래프로 표현해라. 막대는 연비가 높은 순으로 정렬하라\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('data/mpg.csv')\n\ndf  =mpg.query(\"category == 'suv'\") \\\n        .groupby('manufacturer', as_index=False) \\\n        .agg( mean_cty = ('cty', 'mean' )) \\\n        .sort_values('mean_cty', ascending=False)\\\n        .head()\ndf\n\nsns.barplot(data = df, x = 'manufacturer', y='mean_cty')"
  },
  {
    "objectID": "posts/hw4/index.html",
    "href": "posts/hw4/index.html",
    "title": "표본 분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다. \\",
    "section": "",
    "text": "균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n\n# s_2 분포\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1,20)\nx.shape\n\ns_2 = x.var(axis=1, ddof=1)\ns_2\n\n# 히스토그램 그리기\nimport seaborn as sns\nfrom scipy.stats import norm\nsns.histplot(s_2, stat=\"density\", color = \"orange\")\nplt.axvline(x.var(), color=\"green\", linewidth = 2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n# k_2 분포\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1,20)\nx.shape\n\nk_2 = x.var(axis=1, ddof=0)\nk_2\n\n# 히스토그램 그리기\nimport seaborn as sns\nfrom scipy.stats import norm\nsns.histplot(k_2, stat=\"density\", color = \"orange\")\nplt.axvline(x.var(), color=\"green\",  linewidth = 2)\nplt.show()\n\n\n\n\n\n\n\n\n\n결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 써주세요!\nn-1로 나눈것의 표본분산이 모분산에 더 가깝다."
  },
  {
    "objectID": "posts/hw4/index.html#n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요-10000개-사용",
    "href": "posts/hw4/index.html#n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요-10000개-사용",
    "title": "표본 분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다. \\",
    "section": "n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n",
    "text": "n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n\n각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import uniform\n\n\nsamples =uniform.rvs(loc=3, scale=7, size=20)"
  },
  {
    "objectID": "posts/hw4/index.html#균일분포-3-7에서-20개의-표본을-뽑아서-분산을-2가지-방법으로-추정해보세요.-n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요-10000개-사용",
    "href": "posts/hw4/index.html#균일분포-3-7에서-20개의-표본을-뽑아서-분산을-2가지-방법으로-추정해보세요.-n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요-10000개-사용",
    "title": ":LS 빅데이터 스쿨 HomeWork4",
    "section": "균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)",
    "text": "균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n\n# s_2 분포\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1,20)\nx.shape\n\ns_2 = x.var(axis=1, ddof=1)\ns_2\n\n# 히스토그램 그리기\nimport seaborn as sns\nfrom scipy.stats import norm\nsns.histplot(s_2, stat=\"density\")\nplt.axvline(x.var(), color=\"green\", linewidth = 2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n# k_2 분포\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1,20)\nx.shape\n\nk_2 = x.var(axis=1, ddof=0)\nk_2\n\n# 히스토그램 그리기\nimport seaborn as sns\nfrom scipy.stats import norm\nsns.histplot(k_2, stat=\"density\")\nplt.axvline(x.var(), color=\"green\",  linewidth = 2)\nplt.show()"
<<<<<<< HEAD
  },
  {
    "objectID": "posts/hw5/index.html",
    "href": "posts/hw5/index.html",
    "title": ":LS 빅데이터 스쿨 HomeWork5",
    "section": "",
    "text": "챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기. norm.ppf() 사용해서 그릴 것.\n\n모분산은 표본 분산을 사용해서 추정\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nraw_welfare = pd.read_spss('Koweps_hpwc14_2019_beta2.sav')\n\nwelfare =raw_welfare.copy()\n\nwelfare\nwelfare.shape\nwelfare.info()\nwelfare.describe()\n\nwelfare = welfare.rename(\n  columns = {'h14_g3' : 'sex',\n             'h14_g4' : 'birth',\n             'h14_g10' : 'marriage_type',\n             'h14_g11' : 'religion',\n             'p1402_8aq1' : 'income',\n             'h14_eco9' : 'code_job',\n             'h14_reg7' : 'code_region'}\n)\n\nwelfare.columns\n\n\nwelfare['sex'].dtypes\nwelfare['sex'].value_counts()\n\n# 이상치 결측처리 \nwelfare['sex'] = np.where(welfare['sex'] ==9, np.nan, welfare['sex'])\n# 결측치 확인\nwelfare['sex'].isna().sum()\n\n# 숫자1 남자. 숫자2 여자\n\nwelfare['sex'] = np.where(welfare['sex'] ==1, 'male', 'female')\n\n# 빈도 구하기\nwelfare['sex'].value_counts()\n\n# 빈도 막대그래프 그리기\nimport matplotlib.pyplot as plt\nsns.countplot(data = welfare, x = 'sex')\nplt.show()\n\n\n\nwelfare['income'].describe()\nwelfare['income'].isna().sum() \n\n\nwelfare['income'] = np.where(welfare['income'] == 9999, np.nan, welfare['income'])\nwelfare['income'].isna().sum()\n\n\nsex_income = welfare.dropna(subset = 'income') \\\n                    .groupby('sex', as_index = False) \\\n                    .agg(mean_income = ('income', 'mean'),\n                         std_income=('income', 'std'),\n                         count_income=('income', 'count'))\nsex_income  \nsns.barplot(data= sex_income, x = 'sex', y ='mean_income', hue='sex')\nplt.show()\nplt.clf()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 14418 entries, 0 to 14417\nColumns: 830 entries, h14_id to h14_pers_income5\ndtypes: float64(826), object(4)\nmemory usage: 91.3+ MB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n신뢰구간 구하기\n\nimport scipy.stats as stats\n\nsex_income['ci_lower'] = sex_income['mean_income'] - 1.96 * (sex_income['std_income'] / np.sqrt(sex_income['count_income']))\n\nsex_income['ci_lower']\n\n0    180.830354\n1    340.112428\nName: ci_lower, dtype: float64\n\n\n\nsex_income['ci_upper'] = sex_income['mean_income'] + 1.96* (sex_income['std_income'] / np.sqrt(sex_income['count_income']))\nsex_income['ci_upper']\n\n0    191.755837\n1    357.962714\nName: ci_upper, dtype: float64\n\n\n\n\n신뢰구간 나타낸 막대그래프 그리기\n\nsns.barplot(data=welfare, x='sex', y='income', errorbar=('ci', 95), hue='sex')\nplt.xlabel('Sex')\nplt.ylabel('mean_income')\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
=======
>>>>>>> 6d550963f2af6b248674c94c5617f92c47200f17
  }
]