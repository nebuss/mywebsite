{
  "hash": "8d53511692eb9623174d0aba3dc03176",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \":LS 빅데이터 스쿨 HomeWork7\"\nauthor: \"Subeen\"\ndate: \"2024-09-02\"\ncategories: [bigdata]\njupyter: python3\n---\n\n# ADP 표본점수\n\n2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를\n따른다고 한다.\n\n### 1. ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.\n\n::: {#1f0d8705 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nx = np.arange(15, 45, 1)\npdf=norm.pdf(x, 30, 5)\nplt.plot(x, pdf)\nplt.title('Density Function of Normal Distribution (mean=30, std=5)')\nplt.xlabel('Value')\nplt.ylabel('Density')\nplt.grid(True)\nplt.legend()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_2388\\2144709854.py:12: UserWarning:\n\nNo artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=598 height=449}\n:::\n:::\n\n\n### 2. ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.\n\n::: {#b9c6fc27 .cell execution_count=2}\n``` {.python .cell-code}\nfrom scipy.stats import norm\n\npro = 1 - norm.cdf(45, 30, 5)\nprint(f\"45점보다 높을 확률: {pro:.3f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n45점보다 높을 확률: 0.001\n```\n:::\n:::\n\n\n### 3. 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.\n\n::: {#d717704e .cell execution_count=3}\n``` {.python .cell-code}\nprint(f\"슬통이의 점수: {norm.ppf(0.9, 30, 5):.3f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n슬통이의 점수: 36.408\n```\n:::\n:::\n\n\n### 4. 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균 내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.\n\n::: {#5cec0bb8 .cell execution_count=4}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nx = np.arange(15, 45, 1)\nsample_std = 5 / np.sqrt(16)\n\npdf=norm.pdf(x, 30, 5)\nsample_pdf=norm.pdf(x, 30, scale=sample_std)\nplt.plot(x, pdf)\nplt.plot(x, sample_pdf, color='red')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=580 height=411}\n:::\n:::\n\n\n### 5. 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게나올 확률을 구하세요.\n\n::: {#0f4ecaa9 .cell execution_count=5}\n``` {.python .cell-code}\nsample_std = 5 / np.sqrt(16)\npro_up_38 = 1 - norm.cdf(38, 30, scale=sample_std)\nprint(f\"수강생 평균이 38점보다 높을 확률: {pro_up_38:.5f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n수강생 평균이 38점보다 높을 확률: 0.00000\n```\n:::\n:::\n\n\n# Covid 19 발병률\nCovid‑19의 발병률은 1%라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 1,085\n명을 대상으로 슬통 회사의 “다잡아” 키트를 사용하여 양성 반응을 체크한 결과이다.\n\n# 카이제곱분포와 표본분산\n\n### 1. 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.\n\n::: {#8b1be98d .cell execution_count=6}\n``` {.python .cell-code}\nfrom scipy.stats import chi2\nimport matplotlib.pyplot as plt\nimport numpy as np\nk = np.linspace(0, 20, 100)\ny = chi2.pdf(k, df=7)\nplt.plot(k, y, color='black')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=579 height=411}\n:::\n:::\n\n\n### 2. 다음의 확률을 구해보세요. 𝑃 (3 ≤ 𝑋 ≤ 5)\n\n::: {#783c3816 .cell execution_count=7}\n``` {.python .cell-code}\ndf = 4\n\npro = chi2.cdf(5, df) - chi2.cdf(3, df)\nprint(f\"자유도가 4인 카이제곱분포가 (3 ≤ 𝑋 ≤ 5)일 확률: {pro:.3f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n자유도가 4인 카이제곱분포가 (3 ≤ 𝑋 ≤ 5)일 확률: 0.271\n```\n:::\n:::\n\n\n### 3. 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.\n\n::: {#02b9611e .cell execution_count=8}\n``` {.python .cell-code}\nfrom scipy.stats import chi2\nimport seaborn as sns\ndf = 4\nsample = chi2.rvs(df, size=1000, random_state=2024)\nsns.histplot(data=sample)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=604 height=411}\n:::\n:::\n\n\n### 4.자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.\n\n::: {#bc5d8385 .cell execution_count=9}\n``` {.python .cell-code}\ndf = 4\n\nvalue = chi2.ppf(0.95, df)\n\n# 결과 출력\nprint(f\"자유도가 4인 카이제곱분포에서 상위 5%에 해당하는 값: {value:.3f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n자유도가 4인 카이제곱분포에서 상위 5%에 해당하는 값: 9.488\n```\n:::\n:::\n\n\n### 5.3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?\n\n::: {#57699253 .cell execution_count=10}\n``` {.python .cell-code}\nimport numpy as np\ndf = 4\n\nsample = chi2.rvs(df, size=1000, random_state=2024)\npercentile_value = np.percentile(sample, 95)\nprint(f\"3번에서 뽑은 표본값들 중 상위 5%: {percentile_value:.3f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3번에서 뽑은 표본값들 중 상위 5%: 10.006\n```\n:::\n:::\n\n\n### 6. 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 𝑠21 이라 생각해보죠. 다음을 수행해보세요!\n\n::: {#ba40c542 .cell execution_count=11}\n``` {.python .cell-code}\nfrom scipy.stats import norm\nX = norm.rvs(3, 2, 20)\nprint(f\"평균이3, 표준편차가2, 크기가 20인 확률변수: {X}\")\ns2 = np.var(X, ddof=1)\nprint(f\"표본분산:{s2:}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n평균이3, 표준편차가2, 크기가 20인 확률변수: [ 7.69514099  7.073623    2.8243926   5.47797814  0.59603217  2.02916873\n  4.71637692  4.57523817  3.24057425  4.41429155  2.70443113  2.95048302\n -1.38436801  4.00004542  7.12026669  1.88743364  2.42143287  1.03862285\n  4.8525039   2.34106334]\n표본분산:5.263179607289107\n```\n:::\n:::\n\n\n::: {#24f5361e .cell execution_count=12}\n``` {.python .cell-code}\nprint(\"같은 방법으로 500개의 𝑠2 들, 𝑠21, 𝑠22, ..., 𝑠2 500 발생시킵니다.\")\nsize = 20 \nnum_samples = 500  \n\nS2_values = []\n\n# 각 표본에 대해 분산 계산\nfor _ in range(num_samples):\n    Y = norm.rvs(3, 2, size=size)  \n    S2 = np.var(Y, ddof=1)  \n    S2_values.append(S2)\n\n# 첫 번째 표본의 표본 분산 예시 출력\nprint(f\"500개의 표본분산 s2: {S2_values[0]:.3f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n같은 방법으로 500개의 𝑠2 들, 𝑠21, 𝑠22, ..., 𝑠2 500 발생시킵니다.\n500개의 표본분산 s2: 2.109\n```\n:::\n:::\n\n\n::: {#000ffbb0 .cell execution_count=13}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\nprint(\"발생한 500개의 𝑠2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램 을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)\")\ns2value_475 = np.array(S2_values) * 4.75\nsns.histplot(s2value_475, bins=30, stat=\"density\")\n\nprint(\"위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.\")\n\nfrom scipy.stats import chi2\nx = np.linspace(min(s2value_475), max(s2value_475), 1000)\nchi2_pdf=chi2.pdf(x,df=19)\nplt.plot(x, chi2_pdf, color= 'red')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n발생한 500개의 𝑠2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램 을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)\n위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-14-output-2.png){width=597 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}