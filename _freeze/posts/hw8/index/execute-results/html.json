{
  "hash": "0eff93a042a2fe6173228363ed0c5d86",
  "result": {
    "engine": "jupyter",
    "markdown": "![](image.png)\n\n---\ntitle: \":LS 빅데이터 스쿨 HomeWork8\"\nauthor: \"Subeen\"\ndate: \"2024-09-10\"\ncategories: [bigdata]\njupyter: python3\n---\n\n::: {#611743d1 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\n\n\ndata=  pd.read_table('C:/Users/USER/Documents/LS빅데이터스쿨/LSbigdata-project1/data/leukemia_remission.txt', delimiter='\\t')\nprint(data.head())  # 데이터 확인\n\n#종속변수: 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미\n# 독립변수:\n# 골수의 세포성 (CELL)\n# 골수편의 백혈구 비율 (SMEAR)\n# 골수의 백혈병 세포 침투 비율 (INFIL)\n# 골수 백혈병 세포의 라벨링 인덱스 (LI)\n# 말초혈액의 백혈병 세포 수 (BLAST)\n# 치료 시작 전 최고 체온 (TEMP)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   REMISS  CELL  SMEAR  INFIL   LI  BLAST  TEMP\n0       1   0.8   0.83   0.66  1.9   1.10  1.00\n1       1   0.9   0.36   0.32  1.4   0.74  0.99\n2       0   0.8   0.88   0.70  0.8   0.18  0.98\n3       0   1.0   0.87   0.87  0.7   1.05  0.99\n4       1   0.9   0.75   0.68  1.3   0.52  0.98\n```\n:::\n:::\n\n\n### 문제1. 데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.\n\n::: {#b0c94edd .cell execution_count=2}\n``` {.python .cell-code}\nX = data[['CELL', 'SMEAR', 'INFIL', 'LI', 'BLAST', 'TEMP']]  # Independent variables\ny = data['REMISS'] \n\nX = sm.add_constant(X)\n\nlogit_model = sm.Logit(y, X)\nresult = logit_model.fit()\n\nlogit_summary = result.summary()\nlogit_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=35}\n```{=html}\n<table class=\"simpletable\">\n<caption>Logit Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>        <td>REMISS</td>      <th>  No. Observations:  </th>  <td>    27</td> \n</tr>\n<tr>\n  <th>Model:</th>                 <td>Logit</td>      <th>  Df Residuals:      </th>  <td>    20</td> \n</tr>\n<tr>\n  <th>Method:</th>                 <td>MLE</td>       <th>  Df Model:          </th>  <td>     6</td> \n</tr>\n<tr>\n  <th>Date:</th>            <td>Tue, 10 Sep 2024</td> <th>  Pseudo R-squ.:     </th>  <td>0.3718</td> \n</tr>\n<tr>\n  <th>Time:</th>                <td>10:26:27</td>     <th>  Log-Likelihood:    </th> <td> -10.797</td>\n</tr>\n<tr>\n  <th>converged:</th>             <td>True</td>       <th>  LL-Null:           </th> <td> -17.186</td>\n</tr>\n<tr>\n  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>  LLR p-value:       </th>  <td>0.04670</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n    <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>const</th> <td>   64.2581</td> <td>   74.965</td> <td>    0.857</td> <td> 0.391</td> <td>  -82.670</td> <td>  211.187</td>\n</tr>\n<tr>\n  <th>CELL</th>  <td>   30.8301</td> <td>   52.135</td> <td>    0.591</td> <td> 0.554</td> <td>  -71.353</td> <td>  133.013</td>\n</tr>\n<tr>\n  <th>SMEAR</th> <td>   24.6863</td> <td>   61.526</td> <td>    0.401</td> <td> 0.688</td> <td>  -95.903</td> <td>  145.275</td>\n</tr>\n<tr>\n  <th>INFIL</th> <td>  -24.9745</td> <td>   65.281</td> <td>   -0.383</td> <td> 0.702</td> <td> -152.923</td> <td>  102.974</td>\n</tr>\n<tr>\n  <th>LI</th>    <td>    4.3605</td> <td>    2.658</td> <td>    1.641</td> <td> 0.101</td> <td>   -0.849</td> <td>    9.570</td>\n</tr>\n<tr>\n  <th>BLAST</th> <td>   -0.0115</td> <td>    2.266</td> <td>   -0.005</td> <td> 0.996</td> <td>   -4.453</td> <td>    4.430</td>\n</tr>\n<tr>\n  <th>TEMP</th>  <td> -100.1734</td> <td>   77.753</td> <td>   -1.288</td> <td> 0.198</td> <td> -252.567</td> <td>   52.220</td>\n</tr>\n</table><br/><br/>Possibly complete quasi-separation: A fraction 0.11 of observations can be<br/>perfectly predicted. This might indicate that there is complete<br/>quasi-separation. In this case some parameters will not be identified.\n```\n:::\n:::\n\n\n### 문제2. 해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.\n\n::: {#a0a9a9fb .cell execution_count=3}\n``` {.python .cell-code}\nllr_pvalue = result.llr_pvalue #우도비 검정의 p-value : 0.04670\nll_null = result.llnull  #  독립 변수 없이 상수항(intercept)만을 포함한 귀무모형의 로그 우도반환: -17.1858\nll_model = result.llf  # 독립 변수를 포함한 모델로, 독립 변수들이 종속 변수에 영향을 미친다고 가정: (-10.79692\nlr_stat = 2 * (ll_model - ll_null) # LR statistic: 12.7779  클수록 독립 변수를 추가한 모델이 종속 변수를 더 잘 설명한다\n\nllr_pvalue, lr_stat #  p-value가 0.05보다 작으므로, 95% 신뢰수준에서 귀무가설을 기각\nfrom scipy.stats import chi2\n# −2(ℓ(𝛽)̂ (0) − ℓ(𝛽)̂ )  =  -2*(-17.186+10.797)  = 12.779\n1 - chi2.cdf(12.779, df=6)  # 0.0467\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\nnp.float64(0.0466828104726148)\n```\n:::\n:::\n\n\n### 문제3. 유의수준이 0.2를 기준으로 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?\n\n::: {#fe4e0832 .cell execution_count=4}\n``` {.python .cell-code}\np_values = result.pvalues\np_values[p_values < 0.2]\n# 2개.  LI ,  TEMP\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```\nLI      0.100899\nTEMP    0.197623\ndtype: float64\n```\n:::\n:::\n\n\n### 문제4. 다음 환자에 대한 오즈는 얼마인가요?\n\n::: {#6aa506a1 .cell execution_count=5}\n``` {.python .cell-code}\n# CELL (골수의 세포성): 65%\n# SMEAR (골수편의 백혈구 비율): 45%\n# INFIL (골수의 백혈병 세포 침투 비율): 55%\n# LI (골수 백혈병 세포의 라벨링 인덱스): 1.2\n# BLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL\n# TEMP (치료 시작 전 최고 체온): 0.9\ncoefficients = result.params\npatient_data = {\n    'const': 1,  # Intercept\n    'CELL': 0.65,  # 65%\n    'SMEAR': 0.45,  # 45%\n    'INFIL': 0.55,  # 55%\n    'LI': 1.2,  # LI value\n    'BLAST': 1.1,  # BLAST value in cells/μL\n    'TEMP': 0.9  # TEMP value (already scaled)\n}\n\nlog_odds = sum(coefficients[var] * patient_data[var] for var in patient_data)\n\nodds = np.exp(log_odds)\n\nlog_odds, odds # -3.2656, 0.03817\n```\n\n::: {.cell-output .cell-output-display execution_count=38}\n```\n(np.float64(-3.265694097999827), np.float64(0.03817043186641792))\n```\n:::\n:::\n\n\n### 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?\n\n::: {#b1d601be .cell execution_count=6}\n``` {.python .cell-code}\nprob = 1 / (1 + np.exp(-log_odds))\nprob # 0.036767\n```\n\n::: {.cell-output .cell-output-display execution_count=39}\n```\nnp.float64(0.03676701887742584)\n```\n:::\n:::\n\n\n### 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.\n\n::: {#f60f33b9 .cell execution_count=7}\n``` {.python .cell-code}\ntemp_coef = coefficients['TEMP'] # -100.17340\n\ntemp_odds_ratio = np.exp(temp_coef)\ntemp_odds_ratio  \n```\n\n::: {.cell-output .cell-output-display execution_count=40}\n```\nnp.float64(3.1278443426406826e-44)\n```\n:::\n:::\n\n\n 3.13e-44 - > 0에 가까운 값입니다. 이는 체온이 1단위 상승할 때 백혈병 세포가 관측되지 않을 확률이 (오즈비만큼 변동)거의 없어지는 것을 의미 ->  온도가 높아질수록 백혈병 세포가 관측될 확률 높아짐.\n\n### 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.\n\n::: {#284699cf .cell execution_count=8}\n``` {.python .cell-code}\ncell_coef = coefficients['CELL']\ncell_se = result.bse['CELL']  # bse는 **표준 오차(Standard Errors, SE)가 저장된 속성\n\nz_value = 2.576 # 99% 신뢰구간에서 z값\n\nlower_log_odds = cell_coef - z_value * cell_se\nupper_log_odds = cell_coef + z_value * cell_se\n\nlower_odds_ratio = np.exp(lower_log_odds)\nupper_odds_ratio = np.exp(upper_log_odds)\n\nlower_odds_ratio, upper_odds_ratio # 0에 가까운수, 엄청 큰 수.\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\n(np.float64(1.1569618556690256e-45), np.float64(5.191962380123559e+71))\n```\n:::\n:::\n\n\n### 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.\n\n::: {#00000907 .cell execution_count=9}\n``` {.python .cell-code}\nfrom sklearn.metrics import confusion_matrix\npredicted_probabilities = result.predict(X)\npredicted_classes = (predicted_probabilities >= 0.5).astype(int)\nconf_matrix = confusion_matrix(y, predicted_classes)\nconf_matrix  \n\n# 시각화\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# 혼동행렬 데이터\nconf_matrix = [[15, 3], [4, 5]]\n\n# 혼동행렬 시각화\nplt.figure(figsize=(6, 4))\nsns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False)\nplt.title(\"Confusion Matrix\")\nplt.xlabel(\"Predicted Label\")\nplt.ylabel(\"True Label\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-10-output-1.png){width=506 height=376}\n:::\n:::\n\n\n### 문제 9. 해당 모델의 Accuracy는 얼마인가요?\n\n::: {#60970b81 .cell execution_count=10}\n``` {.python .cell-code}\nconf_matrix = np.array([[15, 3], [4, 5]])\n\n# 정확도 계산\naccuracy = (conf_matrix[0, 0] + conf_matrix[1, 1]) / conf_matrix.sum()\naccuracy # 정확도: 약 74.07%\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n```\nnp.float64(0.7407407407407407)\n```\n:::\n:::\n\n\n### 문제 10. 해당 모델의 F1 Score를 구하세요.\n\n::: {#4bb37f56 .cell execution_count=11}\n``` {.python .cell-code}\nfrom sklearn.metrics import f1_score\n\nf1 = f1_score(y, predicted_classes)\nf1  # 0.58823\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\nnp.float64(0.5882352941176471)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}